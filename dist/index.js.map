{"version":3,"file":"index.js","sources":["../src/ci360.utils.js"],"sourcesContent":["const get360ViewProps = (image) => ({\r\n  folder: attr(image, 'folder') || attr(image, 'data-folder') || '/',\r\n  filename: attr(image, 'filename') || attr(image, 'data-filename') || 'image-{index}.jpg',\r\n  imageList: attr(image, 'image-list') || attr(image, 'data-image-list') || null,\r\n  indexZeroBase: parseInt(attr(image, 'index-zero-base') || attr(image, 'data-index-zero-base') || 0, 10),\r\n  amount: parseInt(attr(image, 'amount') || attr(image, 'data-amount') || 36, 10),\r\n  speed: parseInt(attr(image, 'speed') || attr(image, 'data-speed') || 80, 10),\r\n  dragSpeed: parseInt(attr(image, 'drag-speed') || attr(image, 'data-drag-speed') || 150, 10),\r\n  keys: isTrue(image, 'keys'),\r\n  boxShadow: attr(image, 'box-shadow') || attr(image, 'data-box-shadow'),\r\n  autoplay: isTrue(image, 'autoplay'),\r\n  autoplayReverse: isTrue(image, 'autoplay-reverse'),\r\n  bottomCircle: isTrue(image, 'bottom-circle'),\r\n  fullScreen: isTrue(image, 'full-screen'),\r\n  magnifier: ((attr(image, 'magnifier') !== null) || (attr(image, 'data-magnifier') !== null)) &&\r\n    parseInt(attr(image, 'magnifier') || attr(image, 'data-magnifier'), 10),\r\n  bottomCircleOffset: parseInt(attr(image, 'bottom-circle-offset') || attr(image, 'data-bottom-circle-offset') || 5, 10),\r\n  ratio: parseFloat(attr(image, 'ratio') || attr(image, 'data-ratio') || 0) || false,\r\n  responsive: isTrue(image, 'responsive'),\r\n  ciToken: attr(image, 'responsive') || attr(image, 'data-responsive') || 'demo',\r\n  ciSize: attr(image, 'size') || attr(image, 'data-size'),\r\n  ciOperation: attr(image, 'operation') || attr(image, 'data-operation') || 'width',\r\n  ciFilters: attr(image, 'filters') || attr(image, 'data-filters') || 'q35',\r\n  lazyload: isTrue(image, 'lazyload'),\r\n  lazySelector: attr(image, 'lazyload-selector') || attr(image, 'data-lazyload-selector') || 'lazyload',\r\n  spinReverse: isTrue(image, 'spin-reverse'),\r\n  controlReverse: isTrue(image, 'control-reverse'),\r\n  stopAtEdges: isTrue(image, 'stop-at-edges')\r\n});\r\n\r\nconst isTrue = (image, type) => {\r\n  const imgProp = attr(image, type);\r\n  const imgDataProp = attr(image, `data-${type}`);\r\n\r\n  return (imgProp !== null && imgProp !== 'false') || (imgDataProp !== null && imgDataProp !== 'false');\r\n};\r\n\r\nconst attr = (element, attribute) => element.getAttribute(attribute);\r\n\r\nconst set360ViewIconStyles = (view360Icon) => {\r\n  view360Icon.style.position = 'absolute';\r\n  view360Icon.style.top = '0';\r\n  view360Icon.style.bottom = '0';\r\n  view360Icon.style.left = '0';\r\n  view360Icon.style.right = '0';\r\n  view360Icon.style.width = '100px';\r\n  view360Icon.style.height = '100px';\r\n  view360Icon.style.margin = 'auto';\r\n  view360Icon.style.backgroundColor = 'rgba(255,255,255,0.8)';\r\n  view360Icon.style.borderRadius = '50%';\r\n  view360Icon.style.boxShadow = 'rgb(255, 255, 255, 0.5) 0px 0px 4px';\r\n  view360Icon.style.transition = '0.5s all';\r\n  view360Icon.style.color = 'rgb(80,80,80)';\r\n  view360Icon.style.textAlign = 'center';\r\n  view360Icon.style.lineHeight = '100px';\r\n  view360Icon.style.zIndex = '2';\r\n};\r\n\r\nconst setView360Icon = (view360Icon) => {\r\n  view360Icon.style.background = `rgba(255,255,255,0.8) url('https://scaleflex.ultrafast.io/https://scaleflex.airstore.io/filerobot/js-cloudimage-360-view/360_view.svg') 50% 50% / contain no-repeat`;\r\n}\r\n\r\nconst set360ViewCircleIconStyles = (view360CircleIcon, bottomCircleOffset) => {\r\n  view360CircleIcon.src = `https://scaleflex.ultrafast.io/https://scaleflex.api.airstore.io/v1/get/_/2236d56f-914a-5a8b-a3ae-f7bde1c50000/360.svg`;\r\n  view360CircleIcon.style.position = 'absolute';\r\n  view360CircleIcon.style.top = 'auto';\r\n  view360CircleIcon.style.bottom = bottomCircleOffset + '%';\r\n  view360CircleIcon.style.left = '0';\r\n  view360CircleIcon.style.right = '0';\r\n  view360CircleIcon.style.width = '80%';\r\n  view360CircleIcon.style.height = 'auto';\r\n  view360CircleIcon.style.margin = 'auto';\r\n  view360CircleIcon.style.transition = '0.5s all';\r\n  view360CircleIcon.style.zIndex = '2';\r\n};\r\n\r\nconst setLoaderStyles = (loader) => {\r\n  loader.className = 'cloudimage-360-loader';\r\n  loader.style.position = 'absolute';\r\n  loader.style.zIndex = '100';\r\n  loader.style.top = '0';\r\n  loader.style.left = '0';\r\n  loader.style.right = '0';\r\n  loader.style.width = '0%';\r\n  loader.style.height = '8px';\r\n  loader.style.background = 'rgb(165,175,184)';\r\n};\r\n\r\nconst setBoxShadowStyles = (boxShadow, boxShadowValue) => {\r\n  boxShadow.className = 'cloudimage-360-box-shadow';\r\n  boxShadow.style.position = 'absolute';\r\n  boxShadow.style.zIndex = '99';\r\n  boxShadow.style.top = '0';\r\n  boxShadow.style.left = '0';\r\n  boxShadow.style.right = '0';\r\n  boxShadow.style.bottom = '0';\r\n  boxShadow.style.boxShadow = boxShadowValue;\r\n};\r\n\r\nconst setMagnifyIconStyles = (magnifyIcon, fullScreen) => {\r\n  magnifyIcon.style.position = 'absolute';\r\n  magnifyIcon.style.top = fullScreen ? '35px' : '5px';\r\n  magnifyIcon.style.right = '5px';\r\n  magnifyIcon.style.width = '25px';\r\n  magnifyIcon.style.height = '25px';\r\n  magnifyIcon.style.zIndex = '101';\r\n  magnifyIcon.style.cursor = 'pointer';\r\n  magnifyIcon.style.background = `url('https://scaleflex.ultrafast.io/https://scaleflex.airstore.io/filerobot/js-cloudimage-360-view/loupe.svg') 50% 50% / cover no-repeat`;\r\n};\r\n\r\nconst setFullScreenModalStyles = (fullScreenModal) => {\r\n  fullScreenModal.style.position = 'fixed';\r\n  fullScreenModal.style.top = '0';\r\n  fullScreenModal.style.bottom = '0';\r\n  fullScreenModal.style.left = '0';\r\n  fullScreenModal.style.right = '0';\r\n  fullScreenModal.style.width = '100%';\r\n  fullScreenModal.style.height = '100%';\r\n  fullScreenModal.style.zIndex = '999';\r\n  fullScreenModal.style.background = '#fff';\r\n};\r\n\r\nconst setFullScreenIconStyles = (fullScreenIcon) => {\r\n  fullScreenIcon.style.position = 'absolute';\r\n  fullScreenIcon.style.top = '5px';\r\n  fullScreenIcon.style.right = '5px';\r\n  fullScreenIcon.style.width = '25px';\r\n  fullScreenIcon.style.height = '25px';\r\n  fullScreenIcon.style.zIndex = '101';\r\n  fullScreenIcon.style.cursor = 'pointer';\r\n  fullScreenIcon.style.background = `url('https://scaleflex.ultrafast.io/https://scaleflex.airstore.io/filerobot/js-cloudimage-360-view/full_screen.svg') 50% 50% / cover no-repeat`;\r\n};\r\n\r\nconst setCloseFullScreenViewStyles = (closeFullScreenIcon) => {\r\n  closeFullScreenIcon.style.position = 'absolute';\r\n  closeFullScreenIcon.style.top = '5px';\r\n  closeFullScreenIcon.style.right = '5px';\r\n  closeFullScreenIcon.style.width = '25px';\r\n  closeFullScreenIcon.style.height = '25px';\r\n  closeFullScreenIcon.style.zIndex = '101';\r\n  closeFullScreenIcon.style.cursor = 'pointer';\r\n  closeFullScreenIcon.style.background = `url('https://scaleflex.ultrafast.io/https://scaleflex.airstore.io/filerobot/js-cloudimage-360-view/cross.svg') 50% 50% / cover no-repeat`;\r\n};\r\n\r\nconst magnify = (container, src, glass, zoom) => {\r\n  let w, h, bw;\r\n  glass.setAttribute(\"class\", \"img-magnifier-glass\");\r\n  container.prepend(glass);\r\n\r\n  glass.style.backgroundColor = '#fff';\r\n  glass.style.backgroundImage = \"url('\" + src + \"')\";\r\n  glass.style.backgroundRepeat = \"no-repeat\";\r\n  glass.style.backgroundSize = (container.offsetWidth * zoom) + \"px \" + (container.offsetHeight * zoom) + \"px\";\r\n  glass.style.position = 'absolute';\r\n  glass.style.border = '3px solid #000';\r\n  glass.style.borderRadius = '50%';\r\n  glass.style.cursor = 'wait';\r\n  glass.style.lineHeight = '200px';\r\n  glass.style.textAlign = 'center';\r\n  glass.style.zIndex = '1000';\r\n\r\n  glass.style.width = '250px';\r\n  glass.style.height = '250px';\r\n  glass.style.top = '-75px';\r\n  glass.style.right = '-85px';\r\n\r\n  bw = 3;\r\n  w = glass.offsetWidth / 2;\r\n  h = glass.offsetHeight / 2;\r\n\r\n  glass.addEventListener(\"mousemove\", moveMagnifier);\r\n  container.addEventListener(\"mousemove\", moveMagnifier);\r\n\r\n  glass.addEventListener(\"touchmove\", moveMagnifier);\r\n  container.addEventListener(\"touchmove\", moveMagnifier);\r\n\r\n  function moveMagnifier(e) {\r\n    let pos, x, y;\r\n\r\n    e.preventDefault();\r\n\r\n    pos = getCursorPos(e);\r\n    x = pos.x;\r\n    y = pos.y;\r\n\r\n    if (x > container.offsetWidth - (w / zoom)) {\r\n      x = container.offsetWidth - (w / zoom);\r\n    }\r\n\r\n    if (x < w / zoom) {\r\n      x = w / zoom;\r\n    }\r\n\r\n    if (y > container.offsetHeight - (h / zoom)) {\r\n      y = container.offsetHeight - (h / zoom);\r\n    }\r\n\r\n    if (y < h / zoom) {\r\n      y = h / zoom;\r\n    }\r\n\r\n    glass.style.left = (x - w) + \"px\";\r\n    glass.style.top = (y - h) + \"px\";\r\n\r\n    glass.style.backgroundPosition = \"-\" + ((x * zoom) - w + bw) + \"px -\" + ((y * zoom) - h + bw) + \"px\";\r\n  }\r\n\r\n  function getCursorPos(e) {\r\n    let a, x = 0, y = 0;\r\n    e = e || window.event;\r\n    a = container.getBoundingClientRect();\r\n    x = e.pageX - a.left;\r\n    y = e.pageY - a.top;\r\n    x = x - window.pageXOffset;\r\n    y = y - window.pageYOffset;\r\n\r\n    return { x, y };\r\n  }\r\n};\r\n\r\nconst getSizeLimit = (currentSize) => {\r\n  if (currentSize <= 25) return '25';\r\n  if (currentSize <= 50) return '50';\r\n\r\n  return (Math.ceil(currentSize / 100) * 100).toString();\r\n};\r\n\r\nconst getSizeAccordingToPixelRatio = size => {\r\n  const splittedSizes = size.toString().split('x');\r\n  const result = [];\r\n\r\n  [].forEach.call(splittedSizes, size => {\r\n    result.push(size * Math.round(window.devicePixelRatio || 1));\r\n  });\r\n\r\n  return result.join('x');\r\n};\r\n\r\nconst getResponsiveWidthOfContainer = width => getSizeLimit(width);\r\n\r\nconst fit = (contains) => {\r\n  return (parentWidth, parentHeight, childWidth, childHeight, scale = 1, offsetX = 0.5, offsetY = 0.5) => {\r\n    const childRatio = childWidth / childHeight\r\n    const parentRatio = parentWidth / parentHeight\r\n    let width = parentWidth * scale\r\n    let height = parentHeight * scale\r\n\r\n    if (contains ? (childRatio > parentRatio) : (childRatio < parentRatio)) {\r\n      height = width / childRatio\r\n    } else {\r\n      width = height * childRatio\r\n    }\r\n\r\n    return {\r\n      width,\r\n      height,\r\n      offsetX: (parentWidth - width) * offsetX,\r\n      offsetY: (parentHeight - height) * offsetY\r\n    }\r\n  }\r\n};\r\n\r\nconst contain = fit(true);\r\n\r\nconst addClass = (el, className) => {\r\n  if (el.classList)\r\n    el.classList.add(className);\r\n  else\r\n    el.className += ' ' + className;\r\n};\r\n\r\nconst removeClass = (el, className) => {\r\n  if (el.classList)\r\n    el.classList.remove(className);\r\n  else\r\n    el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n};\r\n\r\nconst pad = (n, width = 0) => {\r\n  n = n + '';\r\n\r\n  return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\r\n};\r\n\r\nexport {\r\n  get360ViewProps,\r\n  set360ViewIconStyles,\r\n  set360ViewCircleIconStyles,\r\n  setLoaderStyles,\r\n  setBoxShadowStyles,\r\n  setView360Icon,\r\n  magnify,\r\n  setMagnifyIconStyles,\r\n  setFullScreenModalStyles,\r\n  setFullScreenIconStyles,\r\n  setCloseFullScreenViewStyles,\r\n  getResponsiveWidthOfContainer,\r\n  getSizeAccordingToPixelRatio,\r\n  contain,\r\n  addClass,\r\n  removeClass,\r\n  pad\r\n}"],"names":[],"mappings":"iBAoBE,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}